#Exercice 1
for i in range (1,100):
    div3 = i%3==0
    div5 = i%5==0
    if (div3 and div5):
        print("FizzBuzz")
    elif (div3):
        print("Fizz")
    elif (div5):
        print("Buzz")
    else:
        print(i)


#Exercice 2 (version iterative et r√©cursive)

def recherche(list,elem):
    for i,j in enumerate(list):
        if j==elem:
            return i
    return -1

#print(recherche([1,2,4,7],5))

def recherchedi(list,elem):
    debut=0
    fin=len(list)-1
    mid=(debut+fin)//2
    while debut<mid:
        if (elem<list[debut] or elem>list[fin]):
            return -1
        if (elem==list[mid]):
            return mid
        if (elem>list[mid]):
            debut=mid
        else:
            fin=mid
        mid=(debut+fin)//2
    return -1

#print(recherchedi([1,2,4,7],5))

def rechercheDiRec(list,elem,indice):
        mid=len(list)//2
        if (len(list)==1 and list[0]!=elem):
            return -1
        if (elem<list[0] or elem>list[len(list)-1]):
            return -1
        if (elem==list[mid]):
            return indice+mid
        if (elem>list[mid]):
            return rechercheDiRec(list[mid:],elem,indice+mid)
        else:
            return rechercheDiRec(list[:mid],elem,indice)

print(rechercheDiRec([1,2,4,7,9,11,13,15,19,21,27,31,33,37,41,48,51,55,59,60],2,0))

#Exercice 3
import turtle, random

def turn(tortue):
    x = random.randint(0,2)
    if x == 0:
        tortue.left(90)
    elif x == 1:
        tortue.left(-90)

def colision(liste,t):
    for i in liste:
        if ((abs(i.xcor() - t.xcor()) < t.width()*4 
        and abs(i.ycor() - t.ycor()) < t.width()*4)
        or (abs(i.xcor() - t.xcor()) < i.width()*4 
        and abs(i.ycor() - t.ycor()) < i.width()*4)):
            if i == t:
                continue
            if (i.width()<t.width()):
                    liste.remove(i)
                    i.hideturtle()
                    t.width((i.width()+t.width()))
            else :
                    liste.remove(t)
                    t.hideturtle()
                    i.width((i.width()+t.width()))

def createTurtle(nbre):
    liste=[]
    for i in range(nbre):
        x=turtle.Turtle()
        x.speed(0)
        x.penup()
        x.color(random.random(),random.random(),random.random())
        x.shape("turtle")
        x.setx(random.randint(-200,200))
        x.sety(random.randint(-200,200))
        x.resizemode("auto")
        liste.append(x)
    return liste

initSize=1
turtle.delay(0)
liste=createTurtle(50)
while True:
    for i in liste:
        turn(i)
        i.forward(5)
        colision(liste,i)


